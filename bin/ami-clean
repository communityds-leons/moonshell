#!/usr/bin/env bash
#
# Find and deregister either all unused AMIs, or only those of $ROLE
#

export MOON_FILE=false

source $(dirname $0)/../moon.sh

usage () {
    echoerr "Deregister AMIs in the currently set account."
    echoerr "Usage: $(basename $0) all|ROLE [AMI_TO_EXCLUDE]"
    echoerr
    echoerr "Notes:"
    echoerr " * ROLE is the value of the 'role' tag set on the AMI by Packer"
    echoerr " * ROLE must be quoted if it contains spaces"
    echoerr " * This script is designed for automated operation, it must be cancelled manually"
}

[[ $# -lt 1 ]] \
    && usage \
    && exit \
    || ROLE=$1

[[ ${ROLE} == "all" ]] \
    && AMIS=($(ami_list_all)) \
    || AMIS=($(ami_list_role "${ROLE}"))

[[ ${2-} =~ ^ami-[0-9a-f]+$ ]] \
    && EXCLUDE=$2 \
    && echoerr "INFO: Excluding AMI: ${EXCLUDE}" \
    && AMIS=(${AMIS[@]/$EXCLUDE/})

if [[ ${AMIS[@]-} ]]; then
    [[ ${EXCLUDE-} ]] && AMIS=(${AMIS[@]/$EXCLUDE/})
    for ami in ${AMIS[@]}; do
        instances=($(instances_running_ami ${ami}))
        if [[ ${instances[@]-} ]]; then
            echoerr "INFO: Instances running from ${ami}"
            echoerr "instances=(${instances[@]})"
        else
            echoerr "INFO: No instances are running from ${ami}"
            ami_deregister ${ami}
        fi
    done
else
    echoerr "INFO: No AMIs found"
fi
